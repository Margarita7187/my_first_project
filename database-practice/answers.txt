1. Миграции позволяют версионировать схему БД, отслеживать изменения, легко откатывать обновления и синхронизировать схему между средами разработки, тестирования и продакшена.

2. Один-к-одному (one-to-one), один-ко-многим (one-to-many), многие-ко-многим (many-to-many). Организуются через внешние ключи и связующие таблицы для many-to-many.

3. ORM (Object-Relational Mapping) — это технология для работы с БД через объекты программы. Преимущества: безопасность от SQL-инъекций, переносимость между СУБД, ускорение разработки, автоматическое экранирование данных.

4. Пагинация организуется через LIMIT и OFFSET в SQL-запросах. LIMIT определяет количество записей на странице, OFFSET — смещение для следующей страницы.

5. Транзакции — это атомарные группы операций, которые выполняются полностью или не выполняются вовсе. Используются при финансовых операциях, сложных обновлениях данных, когда требуется целостность данных.

6. Оптимизация запросов: использование индексов, нормализация БД, выбор правильных типов данных, анализ планов выполнения запросов, кэширование, денормализация для частых запросов.

7. Обработка ошибок через try-catch блоки, проверка кодов ошибок, использование транзакций для отката изменений, логирование ошибок, возврат понятных сообщений об ошибках пользователям.

8. Внутреннее соединение (INNER JOIN) возвращает только совпадающие строки из обеих таблиц. Внешнее соединение (LEFT/RIGHT JOIN) возвращает все строки из одной таблицы и совпадающие из другой, с NULL при отсутствии совпадений.