1. Git работает с тремя областями: рабочая папка для текущих правок, индекс для подготовки файлов к коммиту и репозиторий для постоянного хранения снимков проекта. Они отличаются уровнем готовности изменений к сохранению.

2. Команда git add переносит изменения из рабочей папки в индекс. git commit фиксирует проиндексированные изменения в репозитории. git push отправляет локальные коммиты в удаленный репозиторий.

3. Информативные сообщения коммитов важны для понимания истории изменений, эффективного поиска и командной работы, так как объясняют цель изменений без изучения кода.

4. git add имя_файла готовит конкретный файл, давая точный контроль, а git add . добавляет все файлы в текущей директории, что удобно для связанных изменений, но требует осторожности.

5. Команда git status показывает состояние рабочей папки и индекса, отображая неотслеживаемые, измененные и подготовленные файлы, и меняется по мере работы от неотслеживаемых изменений до чистого состояния.

6. Команда git remote add origin URL связывает локальный репозиторий с удаленным, где origin - стандартное имя для удаленного репозитория-источника.

7. Флаг -u в git push -u origin main при первой отправке устанавливает постоянную связь между локальной и удаленной веткой, позволяя в дальнейшем использовать просто git push.

8. Ветка по умолчанию создается первой в репозитории, сейчас это main вместо master, и она важна как основная ветка для стабильного кода и работы CI/CD.

9. Историю коммитов просматривают через git log, видя хэш, автора, дату и сообщение каждого коммита, а с флагами --oneline или --graph получают компактный вывод с визуализацией ветвления.

10. Если сделать изменения без git add перед git commit, эти изменения не попадут в коммит, так как commit фиксирует только подготовленные в индексе файлы.