1. Основное свойство CSS для Flexbox - display: flex. После его применения дочерние элементы становятся flex-элементами и выстраиваются вдоль основной оси, получая возможность гибко изменять размеры и выравнивание.

2. justify-content выравнивает элементы вдоль основной оси (например, по горизонтали при flex-direction: row), а align-items - вдоль поперечной оси (по вертикали). Пример: justify-content: center центрирует элементы по горизонтали, align-items: center - по вертикали.

3. flex-direction определяет направление основной оси. Значения: row (строка, слева направо), row-reverse (строка, справа налево), column (колонка, сверху вниз), column-reverse (колонка, снизу вверх). Оно задает направление основной оси, а поперечная ось будет перпендикулярна ей.

4. В записи flex: 1 первое число - flex-grow (коэффициент роста, определяет как элемент будет увеличиваться относительно других), второе - flex-shrink (коэффициент сжатия), третье - flex-basis (базовый размер элемента до распределения свободного места). Flex: 1 означает flex-grow: 1, flex-shrink: 1, flex-basis: 0%.

5. flex-wrap определяет, будут ли элементы переноситься на новые строки при нехватке места. Значения: nowrap (без переноса), wrap (перенос на новую строку), wrap-reverse (перенос в обратном порядке). Используется когда нужно обеспечить адаптивность без сжатия элементов.

6. align-items выравнивает элементы внутри их контейнера по поперечной оси, а align-content распределяет пространство между строками в многорядном flex-контейнере. align-items используется для однострочных, align-content - для многострочных контейнеров.

7. order изменяет порядок отображения элементов без изменения HTML-структуры. Числовое значение определяет позицию: элементы с меньшим order отображаются раньше. Полезно для адаптивного дизайна, когда на разных устройствах нужно менять порядок блоков.

8. Основная ось (main axis) - главное направление расположения элементов, задается flex-direction. Поперечная ось (cross axis) - перпендикулярна основной. При flex-direction: row основная ось горизонтальна, поперечная - вертикальна; при column - наоборот.

9. Адаптивный макет без медиа-запросов создается с помощью flex-wrap: wrap и гибких размеров flex: 1 1 300px. Элементы автоматически переносятся при уменьшении экрана, а flex-basis задает минимальную ширину перед переносом.

10. Gap создает равные промежутки между всеми элементами, автоматически учитывая крайние элементы, тогда как margins требуют сложных селекторов для исключения отступов у крайних элементов. Gap проще в поддержке и дает более предсказуемый результат.