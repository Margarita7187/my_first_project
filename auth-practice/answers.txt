1. Аутентификация - проверка личности пользователя (логин/пароль), авторизация - проверка прав доступа к ресурсам (роли, разрешения).

2. JWT преимущества: stateless, масштабируемость, кросcдоменность. Недостатки: сложность отзыва токенов, больший размер данных. Сессии: простота отзыва, но требуется хранение состояния на сервере.

3. Хеширование защищает пароли при утечке БД. bcrypt создает медленный хеш с солью, устойчивый к перебору через специальный алгоритм и фактор стоимости.

4. Salt - случайная строка, добавляемая к паролю перед хешированием. Уникальна для каждого пароля, предотвращает атаки по радужным таблицам.

5. Refresh tokens (долгоживущие) используются для получения новых access tokens (короткоживущих). Хранятся безопасно и могут быть отозваны.

6. Защита от brute-force: лимиты попыток, капча, временные блокировки, прогрессивные задержки, мониторинг подозрительной активности.

7. Система ролей: пользователи → роли → разрешения. Реализуется через таблицы связей в БД и проверку прав в middleware.

8. Безопасность JWT: короткое время жизни access токенов, безопасное хранение refresh токенов, проверка подписи, использование HTTPS, защита от XSS и CSRF.