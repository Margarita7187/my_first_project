1. Управляемые компоненты хранят значение в state и обновляются через setState. Неуправляемые получают значения напрямую из DOM через ref. В управляемых React контролирует значение, в неуправляемых - DOM.

2. Управляемые компоненты используются когда нужен немедленный доступ к данным, валидация в реальном времени, контроль над значениями. Неуправляемые - для простых форм, когда не нужна валидация при вводе, для интеграции с не-React кодом.

3. onChange для обработки изменений полей ввода, onSubmit для отправки формы. События обрабатываются через колбэки, которые обновляют state или обрабатывают данные.

4. Через один обработчик, который определяет поле по name или другому атрибуту. Используется вычисляемое имя свойства в объекте state: setFormData(prev => ({...prev, [name]: value}))

5. Валидация при изменении (onChange), при отправке (onSubmit), с помощью кастомных хуков, библиотек (Formik, React Hook Form), HTML5 атрибутов валидации.

6. Вызвать e.preventDefault() в обработчике onSubmit. Это предотвращает стандартную перезагрузку страницы при отправке формы.

7. Поднятие состояния формы - перенос состояния формы в родительский компонент, когда несколько компонентов должны работать с одними данными формы или когда данные нужны на верхнем уровне.